/**
 ******************************************************************************
 *
 * @file       uavobjecttemplate.cpp
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Template for an uavobject in java
 *             This is a autogenerated file!! Do not modify and expect a result.
 *             Selection of optional hardware configurations.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package org.openpilot.uavtalk.uavobjects;

import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

import org.openpilot.uavtalk.UAVObjectManager;
import org.openpilot.uavtalk.UAVObject;
import org.openpilot.uavtalk.UAVDataObject;
import org.openpilot.uavtalk.UAVObjectField;

/**
Selection of optional hardware configurations.

generated from hwsettings.xml
 **/
public class HwSettings extends UAVDataObject {

	public HwSettings() {
		super(OBJID, ISSINGLEINST, ISSETTINGS, NAME);
		
		List<UAVObjectField> fields = new ArrayList<UAVObjectField>();
		

		List<String> CC_RcvrPortElemNames = new ArrayList<String>();
		CC_RcvrPortElemNames.add("0");
		List<String> CC_RcvrPortEnumOptions = new ArrayList<String>();
		CC_RcvrPortEnumOptions.add("Disabled");
		CC_RcvrPortEnumOptions.add("PWM");
		CC_RcvrPortEnumOptions.add("PPM");
		CC_RcvrPortEnumOptions.add("PPM+Outputs");
		CC_RcvrPortEnumOptions.add("Outputs");
		fields.add( new UAVObjectField("CC_RcvrPort", "function", UAVObjectField.FieldType.ENUM, CC_RcvrPortElemNames, CC_RcvrPortEnumOptions) );

		List<String> CC_MainPortElemNames = new ArrayList<String>();
		CC_MainPortElemNames.add("0");
		List<String> CC_MainPortEnumOptions = new ArrayList<String>();
		CC_MainPortEnumOptions.add("Disabled");
		CC_MainPortEnumOptions.add("Telemetry");
		CC_MainPortEnumOptions.add("GPS");
		CC_MainPortEnumOptions.add("S.Bus");
		CC_MainPortEnumOptions.add("DSM2");
		CC_MainPortEnumOptions.add("DSMX (10bit)");
		CC_MainPortEnumOptions.add("DSMX (11bit)");
		CC_MainPortEnumOptions.add("ComAux");
		CC_MainPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("CC_MainPort", "function", UAVObjectField.FieldType.ENUM, CC_MainPortElemNames, CC_MainPortEnumOptions) );

		List<String> CC_FlexiPortElemNames = new ArrayList<String>();
		CC_FlexiPortElemNames.add("0");
		List<String> CC_FlexiPortEnumOptions = new ArrayList<String>();
		CC_FlexiPortEnumOptions.add("Disabled");
		CC_FlexiPortEnumOptions.add("Telemetry");
		CC_FlexiPortEnumOptions.add("GPS");
		CC_FlexiPortEnumOptions.add("I2C");
		CC_FlexiPortEnumOptions.add("DSM2");
		CC_FlexiPortEnumOptions.add("DSMX (10bit)");
		CC_FlexiPortEnumOptions.add("DSMX (11bit)");
		CC_FlexiPortEnumOptions.add("ComAux");
		CC_FlexiPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("CC_FlexiPort", "function", UAVObjectField.FieldType.ENUM, CC_FlexiPortElemNames, CC_FlexiPortEnumOptions) );

		List<String> RV_RcvrPortElemNames = new ArrayList<String>();
		RV_RcvrPortElemNames.add("0");
		List<String> RV_RcvrPortEnumOptions = new ArrayList<String>();
		RV_RcvrPortEnumOptions.add("Disabled");
		RV_RcvrPortEnumOptions.add("PWM");
		RV_RcvrPortEnumOptions.add("PPM");
		RV_RcvrPortEnumOptions.add("PPM+Outputs");
		RV_RcvrPortEnumOptions.add("Outputs");
		fields.add( new UAVObjectField("RV_RcvrPort", "function", UAVObjectField.FieldType.ENUM, RV_RcvrPortElemNames, RV_RcvrPortEnumOptions) );

		List<String> RV_AuxPortElemNames = new ArrayList<String>();
		RV_AuxPortElemNames.add("0");
		List<String> RV_AuxPortEnumOptions = new ArrayList<String>();
		RV_AuxPortEnumOptions.add("Disabled");
		RV_AuxPortEnumOptions.add("Telemetry");
		RV_AuxPortEnumOptions.add("DSM2");
		RV_AuxPortEnumOptions.add("DSMX (10bit)");
		RV_AuxPortEnumOptions.add("DSMX (11bit)");
		RV_AuxPortEnumOptions.add("ComAux");
		RV_AuxPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("RV_AuxPort", "function", UAVObjectField.FieldType.ENUM, RV_AuxPortElemNames, RV_AuxPortEnumOptions) );

		List<String> RV_AuxSBusPortElemNames = new ArrayList<String>();
		RV_AuxSBusPortElemNames.add("0");
		List<String> RV_AuxSBusPortEnumOptions = new ArrayList<String>();
		RV_AuxSBusPortEnumOptions.add("Disabled");
		RV_AuxSBusPortEnumOptions.add("S.Bus");
		RV_AuxSBusPortEnumOptions.add("DSM2");
		RV_AuxSBusPortEnumOptions.add("DSMX (10bit)");
		RV_AuxSBusPortEnumOptions.add("DSMX (11bit)");
		RV_AuxSBusPortEnumOptions.add("ComAux");
		RV_AuxSBusPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("RV_AuxSBusPort", "function", UAVObjectField.FieldType.ENUM, RV_AuxSBusPortElemNames, RV_AuxSBusPortEnumOptions) );

		List<String> RV_FlexiPortElemNames = new ArrayList<String>();
		RV_FlexiPortElemNames.add("0");
		List<String> RV_FlexiPortEnumOptions = new ArrayList<String>();
		RV_FlexiPortEnumOptions.add("Disabled");
		RV_FlexiPortEnumOptions.add("I2C");
		RV_FlexiPortEnumOptions.add("DSM2");
		RV_FlexiPortEnumOptions.add("DSMX (10bit)");
		RV_FlexiPortEnumOptions.add("DSMX (11bit)");
		RV_FlexiPortEnumOptions.add("ComAux");
		RV_FlexiPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("RV_FlexiPort", "function", UAVObjectField.FieldType.ENUM, RV_FlexiPortElemNames, RV_FlexiPortEnumOptions) );

		List<String> RV_TelemetryPortElemNames = new ArrayList<String>();
		RV_TelemetryPortElemNames.add("0");
		List<String> RV_TelemetryPortEnumOptions = new ArrayList<String>();
		RV_TelemetryPortEnumOptions.add("Disabled");
		RV_TelemetryPortEnumOptions.add("Telemetry");
		RV_TelemetryPortEnumOptions.add("ComAux");
		RV_TelemetryPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("RV_TelemetryPort", "function", UAVObjectField.FieldType.ENUM, RV_TelemetryPortElemNames, RV_TelemetryPortEnumOptions) );

		List<String> RV_GPSPortElemNames = new ArrayList<String>();
		RV_GPSPortElemNames.add("0");
		List<String> RV_GPSPortEnumOptions = new ArrayList<String>();
		RV_GPSPortEnumOptions.add("Disabled");
		RV_GPSPortEnumOptions.add("Telemetry");
		RV_GPSPortEnumOptions.add("GPS");
		RV_GPSPortEnumOptions.add("ComAux");
		RV_GPSPortEnumOptions.add("ComBridge");
		fields.add( new UAVObjectField("RV_GPSPort", "function", UAVObjectField.FieldType.ENUM, RV_GPSPortElemNames, RV_GPSPortEnumOptions) );

		List<String> TelemetrySpeedElemNames = new ArrayList<String>();
		TelemetrySpeedElemNames.add("0");
		List<String> TelemetrySpeedEnumOptions = new ArrayList<String>();
		TelemetrySpeedEnumOptions.add("2400");
		TelemetrySpeedEnumOptions.add("4800");
		TelemetrySpeedEnumOptions.add("9600");
		TelemetrySpeedEnumOptions.add("19200");
		TelemetrySpeedEnumOptions.add("38400");
		TelemetrySpeedEnumOptions.add("57600");
		TelemetrySpeedEnumOptions.add("115200");
		fields.add( new UAVObjectField("TelemetrySpeed", "bps", UAVObjectField.FieldType.ENUM, TelemetrySpeedElemNames, TelemetrySpeedEnumOptions) );

		List<String> GPSSpeedElemNames = new ArrayList<String>();
		GPSSpeedElemNames.add("0");
		List<String> GPSSpeedEnumOptions = new ArrayList<String>();
		GPSSpeedEnumOptions.add("2400");
		GPSSpeedEnumOptions.add("4800");
		GPSSpeedEnumOptions.add("9600");
		GPSSpeedEnumOptions.add("19200");
		GPSSpeedEnumOptions.add("38400");
		GPSSpeedEnumOptions.add("57600");
		GPSSpeedEnumOptions.add("115200");
		fields.add( new UAVObjectField("GPSSpeed", "bps", UAVObjectField.FieldType.ENUM, GPSSpeedElemNames, GPSSpeedEnumOptions) );

		List<String> ComUsbBridgeSpeedElemNames = new ArrayList<String>();
		ComUsbBridgeSpeedElemNames.add("0");
		List<String> ComUsbBridgeSpeedEnumOptions = new ArrayList<String>();
		ComUsbBridgeSpeedEnumOptions.add("2400");
		ComUsbBridgeSpeedEnumOptions.add("4800");
		ComUsbBridgeSpeedEnumOptions.add("9600");
		ComUsbBridgeSpeedEnumOptions.add("19200");
		ComUsbBridgeSpeedEnumOptions.add("38400");
		ComUsbBridgeSpeedEnumOptions.add("57600");
		ComUsbBridgeSpeedEnumOptions.add("115200");
		fields.add( new UAVObjectField("ComUsbBridgeSpeed", "bps", UAVObjectField.FieldType.ENUM, ComUsbBridgeSpeedElemNames, ComUsbBridgeSpeedEnumOptions) );

		List<String> USB_HIDPortElemNames = new ArrayList<String>();
		USB_HIDPortElemNames.add("0");
		List<String> USB_HIDPortEnumOptions = new ArrayList<String>();
		USB_HIDPortEnumOptions.add("USBTelemetry");
		USB_HIDPortEnumOptions.add("Disabled");
		fields.add( new UAVObjectField("USB_HIDPort", "function", UAVObjectField.FieldType.ENUM, USB_HIDPortElemNames, USB_HIDPortEnumOptions) );

		List<String> USB_VCPPortElemNames = new ArrayList<String>();
		USB_VCPPortElemNames.add("0");
		List<String> USB_VCPPortEnumOptions = new ArrayList<String>();
		USB_VCPPortEnumOptions.add("USBTelemetry");
		USB_VCPPortEnumOptions.add("ComBridge");
		USB_VCPPortEnumOptions.add("Disabled");
		fields.add( new UAVObjectField("USB_VCPPort", "function", UAVObjectField.FieldType.ENUM, USB_VCPPortElemNames, USB_VCPPortEnumOptions) );

		List<String> OptionalModulesElemNames = new ArrayList<String>();
		OptionalModulesElemNames.add("CameraStab");
		OptionalModulesElemNames.add("GPS");
		OptionalModulesElemNames.add("ComUsbBridge");
		OptionalModulesElemNames.add("Fault");
		OptionalModulesElemNames.add("Altitude");
		OptionalModulesElemNames.add("TxPID");
		List<String> OptionalModulesEnumOptions = new ArrayList<String>();
		OptionalModulesEnumOptions.add("Disabled");
		OptionalModulesEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("OptionalModules", "", UAVObjectField.FieldType.ENUM, OptionalModulesElemNames, OptionalModulesEnumOptions) );

		List<String> DSMxBindElemNames = new ArrayList<String>();
		DSMxBindElemNames.add("0");
		fields.add( new UAVObjectField("DSMxBind", "", UAVObjectField.FieldType.UINT8, DSMxBindElemNames, null) );


		// Compute the number of bytes for this object
		int numBytes = 0;
		ListIterator<UAVObjectField> li = fields.listIterator();
		while(li.hasNext()) {
			numBytes += li.next().getNumBytes();
		}
		NUMBYTES = numBytes;

		// Initialize object
		initializeFields(fields, ByteBuffer.allocate(NUMBYTES), NUMBYTES);
		// Set the default field values
		setDefaultFieldValues();
		// Set the object description
		setDescription(DESCRIPTION);
	}

	/**
	 * Create a Metadata object filled with default values for this object
	 * @return Metadata object with default values
	 */
	public Metadata getDefaultMetadata() {
		UAVObject.Metadata metadata = new UAVObject.Metadata();
    	metadata.flags =
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_ACCESS_SHIFT |
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_GCS_ACCESS_SHIFT |
		    1 << UAVOBJ_TELEMETRY_ACKED_SHIFT |
		    1 << UAVOBJ_GCS_TELEMETRY_ACKED_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_ONCHANGE) << UAVOBJ_TELEMETRY_UPDATE_MODE_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_ONCHANGE) << UAVOBJ_GCS_TELEMETRY_UPDATE_MODE_SHIFT;
    	metadata.flightTelemetryUpdatePeriod = 0;
    	metadata.gcsTelemetryUpdatePeriod = 0;
    	metadata.loggingUpdatePeriod = 0;
 
		return metadata;
	}

	/**
	 * Initialize object fields with the default values.
	 * If a default value is not specified the object fields
	 * will be initialized to zero.
	 */
	public void setDefaultFieldValues()
	{
		getField("CC_RcvrPort").setValue("PWM");
		getField("CC_MainPort").setValue("Disabled");
		getField("CC_FlexiPort").setValue("Disabled");
		getField("RV_RcvrPort").setValue("PWM");
		getField("RV_AuxPort").setValue("Disabled");
		getField("RV_AuxSBusPort").setValue("Disabled");
		getField("RV_FlexiPort").setValue("Disabled");
		getField("RV_TelemetryPort").setValue("Telemetry");
		getField("RV_GPSPort").setValue("GPS");
		getField("TelemetrySpeed").setValue("57600");
		getField("GPSSpeed").setValue("57600");
		getField("ComUsbBridgeSpeed").setValue("57600");
		getField("USB_HIDPort").setValue("USBTelemetry");
		getField("USB_VCPPort").setValue("Disabled");
		getField("OptionalModules").setValue("Disabled",0);
		getField("OptionalModules").setValue("Disabled",1);
		getField("OptionalModules").setValue("Disabled",2);
		getField("OptionalModules").setValue("Disabled",3);
		getField("OptionalModules").setValue("Disabled",4);
		getField("OptionalModules").setValue("Disabled",5);
		getField("DSMxBind").setValue(0);

	}

	/**
	 * Create a clone of this object, a new instance ID must be specified.
	 * Do not use this function directly to create new instances, the
	 * UAVObjectManager should be used instead.
	 */
	public UAVDataObject clone(long instID) {
		// TODO: Need to get specific instance to clone
		try {
			HwSettings obj = new HwSettings();
			obj.initialize(instID, this.getMetaObject());
			return obj;
		} catch  (Exception e) {
			return null;
		}
	}

	/**
	 * Static function to retrieve an instance of the object.
	 */
	public HwSettings GetInstance(UAVObjectManager objMngr, long instID)
	{
	    return (HwSettings)(objMngr.getObject(HwSettings.OBJID, instID));
	}

	// Constants
	protected static final long OBJID = 0x9408E9F0l;
	protected static final String NAME = "HwSettings";
	protected static String DESCRIPTION = "Selection of optional hardware configurations.";
	protected static final boolean ISSINGLEINST = 1 > 0;
	protected static final boolean ISSETTINGS = 1 > 0;
	protected static int NUMBYTES = 0;


}
