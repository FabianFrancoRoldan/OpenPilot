/**
 ******************************************************************************
 *
 * @file       uavobjecttemplate.cpp
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Template for an uavobject in java
 *             This is a autogenerated file!! Do not modify and expect a result.
 *             PipXtreme device status.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package org.openpilot.uavtalk.uavobjects;

import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

import org.openpilot.uavtalk.UAVObjectManager;
import org.openpilot.uavtalk.UAVObject;
import org.openpilot.uavtalk.UAVDataObject;
import org.openpilot.uavtalk.UAVObjectField;

/**
PipXtreme device status.

generated from pipxstatus.xml
 **/
public class PipXStatus extends UAVDataObject {

	public PipXStatus() {
		super(OBJID, ISSINGLEINST, ISSETTINGS, NAME);
		
		List<UAVObjectField> fields = new ArrayList<UAVObjectField>();
		

		List<String> MinFrequencyElemNames = new ArrayList<String>();
		MinFrequencyElemNames.add("0");
		fields.add( new UAVObjectField("MinFrequency", "Hz", UAVObjectField.FieldType.UINT32, MinFrequencyElemNames, null) );

		List<String> MaxFrequencyElemNames = new ArrayList<String>();
		MaxFrequencyElemNames.add("0");
		fields.add( new UAVObjectField("MaxFrequency", "Hz", UAVObjectField.FieldType.UINT32, MaxFrequencyElemNames, null) );

		List<String> FrequencyStepSizeElemNames = new ArrayList<String>();
		FrequencyStepSizeElemNames.add("0");
		fields.add( new UAVObjectField("FrequencyStepSize", "", UAVObjectField.FieldType.FLOAT32, FrequencyStepSizeElemNames, null) );

		List<String> DeviceIDElemNames = new ArrayList<String>();
		DeviceIDElemNames.add("0");
		fields.add( new UAVObjectField("DeviceID", "", UAVObjectField.FieldType.UINT32, DeviceIDElemNames, null) );

		List<String> AFCElemNames = new ArrayList<String>();
		AFCElemNames.add("0");
		fields.add( new UAVObjectField("AFC", "", UAVObjectField.FieldType.INT32, AFCElemNames, null) );

		List<String> PairIDsElemNames = new ArrayList<String>();
		PairIDsElemNames.add("0");
		PairIDsElemNames.add("1");
		PairIDsElemNames.add("2");
		PairIDsElemNames.add("3");
		fields.add( new UAVObjectField("PairIDs", "", UAVObjectField.FieldType.UINT32, PairIDsElemNames, null) );

		List<String> BoardRevisionElemNames = new ArrayList<String>();
		BoardRevisionElemNames.add("0");
		fields.add( new UAVObjectField("BoardRevision", "", UAVObjectField.FieldType.UINT16, BoardRevisionElemNames, null) );

		List<String> RetriesElemNames = new ArrayList<String>();
		RetriesElemNames.add("0");
		fields.add( new UAVObjectField("Retries", "", UAVObjectField.FieldType.UINT16, RetriesElemNames, null) );

		List<String> ErrorsElemNames = new ArrayList<String>();
		ErrorsElemNames.add("0");
		fields.add( new UAVObjectField("Errors", "", UAVObjectField.FieldType.UINT16, ErrorsElemNames, null) );

		List<String> UAVTalkErrorsElemNames = new ArrayList<String>();
		UAVTalkErrorsElemNames.add("0");
		fields.add( new UAVObjectField("UAVTalkErrors", "", UAVObjectField.FieldType.UINT16, UAVTalkErrorsElemNames, null) );

		List<String> DroppedElemNames = new ArrayList<String>();
		DroppedElemNames.add("0");
		fields.add( new UAVObjectField("Dropped", "", UAVObjectField.FieldType.UINT16, DroppedElemNames, null) );

		List<String> ResetsElemNames = new ArrayList<String>();
		ResetsElemNames.add("0");
		fields.add( new UAVObjectField("Resets", "", UAVObjectField.FieldType.UINT16, ResetsElemNames, null) );

		List<String> TXRateElemNames = new ArrayList<String>();
		TXRateElemNames.add("0");
		fields.add( new UAVObjectField("TXRate", "Bps", UAVObjectField.FieldType.UINT16, TXRateElemNames, null) );

		List<String> RXRateElemNames = new ArrayList<String>();
		RXRateElemNames.add("0");
		fields.add( new UAVObjectField("RXRate", "Bps", UAVObjectField.FieldType.UINT16, RXRateElemNames, null) );

		List<String> DescriptionElemNames = new ArrayList<String>();
		DescriptionElemNames.add("0");
		DescriptionElemNames.add("1");
		DescriptionElemNames.add("2");
		DescriptionElemNames.add("3");
		DescriptionElemNames.add("4");
		DescriptionElemNames.add("5");
		DescriptionElemNames.add("6");
		DescriptionElemNames.add("7");
		DescriptionElemNames.add("8");
		DescriptionElemNames.add("9");
		DescriptionElemNames.add("10");
		DescriptionElemNames.add("11");
		DescriptionElemNames.add("12");
		DescriptionElemNames.add("13");
		DescriptionElemNames.add("14");
		DescriptionElemNames.add("15");
		DescriptionElemNames.add("16");
		DescriptionElemNames.add("17");
		DescriptionElemNames.add("18");
		DescriptionElemNames.add("19");
		DescriptionElemNames.add("20");
		DescriptionElemNames.add("21");
		DescriptionElemNames.add("22");
		DescriptionElemNames.add("23");
		DescriptionElemNames.add("24");
		DescriptionElemNames.add("25");
		DescriptionElemNames.add("26");
		DescriptionElemNames.add("27");
		DescriptionElemNames.add("28");
		DescriptionElemNames.add("29");
		DescriptionElemNames.add("30");
		DescriptionElemNames.add("31");
		DescriptionElemNames.add("32");
		DescriptionElemNames.add("33");
		DescriptionElemNames.add("34");
		DescriptionElemNames.add("35");
		DescriptionElemNames.add("36");
		DescriptionElemNames.add("37");
		DescriptionElemNames.add("38");
		DescriptionElemNames.add("39");
		fields.add( new UAVObjectField("Description", "", UAVObjectField.FieldType.UINT8, DescriptionElemNames, null) );

		List<String> CPUSerialElemNames = new ArrayList<String>();
		CPUSerialElemNames.add("0");
		CPUSerialElemNames.add("1");
		CPUSerialElemNames.add("2");
		CPUSerialElemNames.add("3");
		CPUSerialElemNames.add("4");
		CPUSerialElemNames.add("5");
		CPUSerialElemNames.add("6");
		CPUSerialElemNames.add("7");
		CPUSerialElemNames.add("8");
		CPUSerialElemNames.add("9");
		CPUSerialElemNames.add("10");
		CPUSerialElemNames.add("11");
		fields.add( new UAVObjectField("CPUSerial", "", UAVObjectField.FieldType.UINT8, CPUSerialElemNames, null) );

		List<String> BoardTypeElemNames = new ArrayList<String>();
		BoardTypeElemNames.add("0");
		fields.add( new UAVObjectField("BoardType", "", UAVObjectField.FieldType.UINT8, BoardTypeElemNames, null) );

		List<String> FrequencyBandElemNames = new ArrayList<String>();
		FrequencyBandElemNames.add("0");
		fields.add( new UAVObjectField("FrequencyBand", "", UAVObjectField.FieldType.UINT8, FrequencyBandElemNames, null) );

		List<String> RSSIElemNames = new ArrayList<String>();
		RSSIElemNames.add("0");
		fields.add( new UAVObjectField("RSSI", "dBm", UAVObjectField.FieldType.INT8, RSSIElemNames, null) );

		List<String> LinkStateElemNames = new ArrayList<String>();
		LinkStateElemNames.add("0");
		List<String> LinkStateEnumOptions = new ArrayList<String>();
		LinkStateEnumOptions.add("Disconnected");
		LinkStateEnumOptions.add("Connecting");
		LinkStateEnumOptions.add("Connected");
		fields.add( new UAVObjectField("LinkState", "function", UAVObjectField.FieldType.ENUM, LinkStateElemNames, LinkStateEnumOptions) );

		List<String> PairSignalStrengthsElemNames = new ArrayList<String>();
		PairSignalStrengthsElemNames.add("0");
		PairSignalStrengthsElemNames.add("1");
		PairSignalStrengthsElemNames.add("2");
		PairSignalStrengthsElemNames.add("3");
		fields.add( new UAVObjectField("PairSignalStrengths", "dBm", UAVObjectField.FieldType.INT8, PairSignalStrengthsElemNames, null) );


		// Compute the number of bytes for this object
		int numBytes = 0;
		ListIterator<UAVObjectField> li = fields.listIterator();
		while(li.hasNext()) {
			numBytes += li.next().getNumBytes();
		}
		NUMBYTES = numBytes;

		// Initialize object
		initializeFields(fields, ByteBuffer.allocate(NUMBYTES), NUMBYTES);
		// Set the default field values
		setDefaultFieldValues();
		// Set the object description
		setDescription(DESCRIPTION);
	}

	/**
	 * Create a Metadata object filled with default values for this object
	 * @return Metadata object with default values
	 */
	public Metadata getDefaultMetadata() {
		UAVObject.Metadata metadata = new UAVObject.Metadata();
    	metadata.flags =
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_ACCESS_SHIFT |
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READONLY) << UAVOBJ_GCS_ACCESS_SHIFT |
		    0 << UAVOBJ_TELEMETRY_ACKED_SHIFT |
		    0 << UAVOBJ_GCS_TELEMETRY_ACKED_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_MANUAL) << UAVOBJ_TELEMETRY_UPDATE_MODE_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_MANUAL) << UAVOBJ_GCS_TELEMETRY_UPDATE_MODE_SHIFT;
    	metadata.flightTelemetryUpdatePeriod = 0;
    	metadata.gcsTelemetryUpdatePeriod = 0;
    	metadata.loggingUpdatePeriod = 1000;
 
		return metadata;
	}

	/**
	 * Initialize object fields with the default values.
	 * If a default value is not specified the object fields
	 * will be initialized to zero.
	 */
	public void setDefaultFieldValues()
	{
		getField("MinFrequency").setValue(0);
		getField("MaxFrequency").setValue(0);
		getField("FrequencyStepSize").setValue(0);
		getField("DeviceID").setValue(0);
		getField("AFC").setValue(0);
		getField("PairIDs").setValue(0,0);
		getField("PairIDs").setValue(0,1);
		getField("PairIDs").setValue(0,2);
		getField("PairIDs").setValue(0,3);
		getField("Retries").setValue(0);
		getField("Errors").setValue(0);
		getField("UAVTalkErrors").setValue(0);
		getField("Dropped").setValue(0);
		getField("Resets").setValue(0);
		getField("TXRate").setValue(0);
		getField("RXRate").setValue(0);
		getField("FrequencyBand").setValue(0);
		getField("RSSI").setValue(0);
		getField("LinkState").setValue("Disconnected");
		getField("PairSignalStrengths").setValue(-127,0);
		getField("PairSignalStrengths").setValue(-127,1);
		getField("PairSignalStrengths").setValue(-127,2);
		getField("PairSignalStrengths").setValue(-127,3);

	}

	/**
	 * Create a clone of this object, a new instance ID must be specified.
	 * Do not use this function directly to create new instances, the
	 * UAVObjectManager should be used instead.
	 */
	public UAVDataObject clone(long instID) {
		// TODO: Need to get specific instance to clone
		try {
			PipXStatus obj = new PipXStatus();
			obj.initialize(instID, this.getMetaObject());
			return obj;
		} catch  (Exception e) {
			return null;
		}
	}

	/**
	 * Static function to retrieve an instance of the object.
	 */
	public PipXStatus GetInstance(UAVObjectManager objMngr, long instID)
	{
	    return (PipXStatus)(objMngr.getObject(PipXStatus.OBJID, instID));
	}

	// Constants
	protected static final long OBJID = 0x3FC68A86l;
	protected static final String NAME = "PipXStatus";
	protected static String DESCRIPTION = "PipXtreme device status.";
	protected static final boolean ISSINGLEINST = 1 > 0;
	protected static final boolean ISSETTINGS = 0 > 0;
	protected static int NUMBYTES = 0;


}
